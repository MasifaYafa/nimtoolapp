# Generated by Django 4.2.7 on 2025-08-06 18:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Alert title', max_length=200)),
                ('message', models.TextField(help_text='Detailed alert message')),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('warning', 'Warning'), ('info', 'Info')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('suppressed', 'Suppressed')], default='active', max_length=12)),
                ('metric_name', models.CharField(blank=True, max_length=50)),
                ('current_value', models.FloatField(blank=True, null=True)),
                ('threshold_value', models.FloatField(blank=True, null=True)),
                ('first_occurred', models.DateTimeField(auto_now_add=True)),
                ('last_occurred', models.DateTimeField(auto_now=True)),
                ('occurrence_count', models.PositiveIntegerField(default=1)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledgment_note', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_note', models.TextField(blank=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('notification_count', models.PositiveIntegerField(default=0)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'db_table': 'alerts',
                'ordering': ['-first_occurred'],
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rule name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Rule description')),
                ('metric_type', models.CharField(help_text='Type of metric to monitor (cpu_usage, memory_usage, etc.)', max_length=50)),
                ('condition', models.CharField(choices=[('equals', 'Equals'), ('gt', 'Greater Than'), ('lt', 'Less Than'), ('not_responding', 'Not Responding'), ('contains', 'Contains')], max_length=15)),
                ('threshold_value', models.FloatField(help_text='Threshold value for comparison')),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('warning', 'Warning'), ('info', 'Info')], max_length=10)),
                ('message_template', models.TextField(help_text='Alert message template (can use {device_name}, {value}, etc.)')),
                ('is_active', models.BooleanField(default=True)),
                ('applies_to_all_devices', models.BooleanField(default=False, help_text='Apply this rule to all devices')),
                ('send_email', models.BooleanField(default=True)),
                ('send_sms', models.BooleanField(default=False)),
                ('email_recipients', models.TextField(blank=True, help_text='Comma-separated email addresses')),
                ('check_interval', models.PositiveIntegerField(default=300, help_text='How often to check this rule (seconds)')),
                ('cooldown_period', models.PositiveIntegerField(default=300, help_text='Minimum time between alerts for the same condition (seconds)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alert_rules', to=settings.AUTH_USER_MODEL)),
                ('specific_devices', models.ManyToManyField(blank=True, help_text='Specific devices this rule applies to (if not all devices)', to='devices.device')),
            ],
            options={
                'verbose_name': 'Alert Rule',
                'verbose_name_plural': 'Alert Rules',
                'db_table': 'alert_rules',
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('slack', 'Slack'), ('webhook', 'Webhook')], max_length=10)),
                ('recipient', models.CharField(help_text='Email, phone number, or endpoint', max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('retry', 'Retry')], default='pending', max_length=10)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('next_retry', models.DateTimeField(blank=True, null=True)),
                ('response_code', models.CharField(blank=True, max_length=10)),
                ('response_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='alerts.alert')),
            ],
            options={
                'verbose_name': 'Alert Notification',
                'verbose_name_plural': 'Alert Notifications',
                'db_table': 'alert_notifications',
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='alert_rule',
            field=models.ForeignKey(blank=True, help_text='Rule that generated this alert', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_alerts', to='alerts.alertrule'),
        ),
        migrations.AddField(
            model_name='alert',
            name='device',
            field=models.ForeignKey(help_text='Device that triggered this alert', on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='devices.device'),
        ),
        migrations.AddField(
            model_name='alert',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['device', 'status', '-first_occurred'], name='alerts_device__a3e0f9_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['severity', 'status'], name='alerts_severit_ae6d4c_idx'),
        ),
    ]
