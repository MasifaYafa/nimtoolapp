# Generated by Django 4.2.7 on 2025-09-18 06:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0002_auto_20250821_0136'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigurationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('description', models.TextField(help_text='Template description')),
                ('template_type', models.CharField(choices=[('switch', 'Switch'), ('router', 'Router'), ('firewall', 'Firewall'), ('access_point', 'Access Point'), ('all', 'All Devices')], help_text='Device type this template applies to', max_length=15)),
                ('commands', models.TextField(help_text='Configuration commands (one per line)')),
                ('variables', models.JSONField(blank=True, default=dict, help_text="Template variables as JSON (e.g., {'DEVICE_NAME': 'Switch-01'})")),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times applied')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='config_templates_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuration Template',
                'verbose_name_plural': 'Configuration Templates',
                'db_table': 'configuration_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceConfigurationSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('error', 'Error')], default='active', max_length=10)),
                ('configuration_data', models.TextField(blank=True, help_text='Current configuration being edited')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(help_text='Session expiry time')),
                ('applied_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='config_sessions', to='configuration.configurationtemplate')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_sessions', to='devices.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device Configuration Session',
                'verbose_name_plural': 'Device Configuration Sessions',
                'db_table': 'device_config_sessions',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceConfigurationBackup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('backup_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('scheduled', 'Scheduled')], max_length=10)),
                ('backup_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=15)),
                ('file_name', models.CharField(help_text='Backup file name', max_length=255)),
                ('file_path', models.CharField(help_text='Full path to backup file', max_length=500)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('config_content', models.TextField(blank=True, help_text='Configuration content')),
                ('config_hash', models.CharField(help_text='SHA256 hash of configuration', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if backup failed')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='config_backups_created', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_backups', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Configuration Backup',
                'verbose_name_plural': 'Device Configuration Backups',
                'db_table': 'device_config_backups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BulkOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Operation name', max_length=100)),
                ('operation_type', models.CharField(choices=[('firmware_update', 'Firmware Update'), ('config_backup', 'Configuration Backup'), ('apply_template', 'Apply Template'), ('security_update', 'Security Update'), ('reboot', 'Reboot'), ('custom_command', 'Custom Command')], max_length=20)),
                ('parameters', models.JSONField(default=dict, help_text='Operation-specific parameters')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('total_devices', models.PositiveIntegerField(default=0)),
                ('successful_devices', models.PositiveIntegerField(default=0)),
                ('failed_devices', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bulk_operations_created', to=settings.AUTH_USER_MODEL)),
                ('devices', models.ManyToManyField(related_name='bulk_operations', to='devices.device')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bulk_operations', to='configuration.configurationtemplate')),
            ],
            options={
                'verbose_name': 'Bulk Operation',
                'verbose_name_plural': 'Bulk Operations',
                'db_table': 'bulk_operations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Schedule name', max_length=100)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], max_length=10)),
                ('hour', models.PositiveIntegerField(default=2, help_text='Hour of day (0-23)')),
                ('minute', models.PositiveIntegerField(default=0, help_text='Minute of hour (0-59)')),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='Day of week (0=Monday)', null=True)),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month (1-31)', null=True)),
                ('retention_days', models.PositiveIntegerField(default=30, help_text='Days to keep backups')),
                ('compress_files', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='backup_schedules_created', to=settings.AUTH_USER_MODEL)),
                ('device_types', models.ManyToManyField(blank=True, related_name='backup_schedules', to='devices.devicetype')),
                ('devices', models.ManyToManyField(related_name='backup_schedules', to='devices.device')),
            ],
            options={
                'verbose_name': 'Backup Schedule',
                'verbose_name_plural': 'Backup Schedules',
                'db_table': 'backup_schedules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BulkOperationResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=10)),
                ('message', models.TextField(blank=True, help_text='Success/error message')),
                ('output', models.TextField(blank=True, help_text='Command output or response')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('bulk_operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='configuration.bulkoperation')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.device')),
            ],
            options={
                'verbose_name': 'Bulk Operation Result',
                'verbose_name_plural': 'Bulk Operation Results',
                'db_table': 'bulk_operation_results',
                'ordering': ['device__name'],
                'unique_together': {('bulk_operation', 'device')},
            },
        ),
    ]
