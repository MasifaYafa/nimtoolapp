# Generated by Django 4.2.7 on 2025-08-06 18:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('description', models.TextField(help_text='What this report contains')),
                ('category', models.CharField(choices=[('uptime', 'Uptime Reports'), ('performance', 'Performance Reports'), ('bandwidth', 'Bandwidth Reports'), ('security', 'Security Reports'), ('inventory', 'Inventory Reports'), ('alerts', 'Alert Reports'), ('custom', 'Custom Reports')], max_length=12)),
                ('data_sources', models.JSONField(default=list, help_text='Data sources and queries for this report')),
                ('filters', models.JSONField(default=dict, help_text='Default filters for this report')),
                ('grouping', models.JSONField(default=dict, help_text='How to group the data')),
                ('sorting', models.JSONField(default=dict, help_text='Default sorting configuration')),
                ('supported_formats', models.JSONField(default=list, help_text='List of supported output formats')),
                ('default_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('html', 'HTML')], default='pdf', max_length=10)),
                ('include_charts', models.BooleanField(default=True)),
                ('chart_types', models.JSONField(default=list, help_text='Types of charts to include')),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_template', models.BooleanField(default=False, help_text='System templates cannot be deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Schedule name', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('html', 'HTML')], max_length=10)),
                ('frequency', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=12)),
                ('hour', models.PositiveIntegerField(default=9, help_text='Hour to run (0-23)')),
                ('day_of_week', models.PositiveIntegerField(blank=True, help_text='Day of week for weekly reports (0=Monday, 6=Sunday)', null=True)),
                ('day_of_month', models.PositiveIntegerField(blank=True, help_text='Day of month for monthly reports (1-31)', null=True)),
                ('data_retention_days', models.PositiveIntegerField(default=7, help_text='How many days of data to include')),
                ('filters', models.JSONField(default=dict)),
                ('parameters', models.JSONField(default=dict)),
                ('email_recipients', models.TextField(blank=True, help_text='Comma-separated email addresses')),
                ('auto_email', models.BooleanField(default=False, help_text='Automatically email when report is generated')),
                ('is_active', models.BooleanField(default=True)),
                ('next_run', models.DateTimeField(help_text='When this schedule will next run')),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report_schedules', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
                'db_table': 'report_schedules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportDataCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=255, unique=True)),
                ('data', models.JSONField(help_text='Cached data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this cache entry expires')),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report Data Cache',
                'verbose_name_plural': 'Report Data Cache',
                'db_table': 'report_data_cache',
                'indexes': [models.Index(fields=['cache_key', 'expires_at'], name='report_data_cache_k_56a07b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Report name', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('html', 'HTML')], max_length=10)),
                ('date_range_start', models.DateTimeField(help_text='Start of data range')),
                ('date_range_end', models.DateTimeField(help_text='End of data range')),
                ('filters', models.JSONField(default=dict, help_text='Filters applied to this report')),
                ('parameters', models.JSONField(default=dict, help_text='Additional parameters used in generation')),
                ('include_all_devices', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=12)),
                ('file_path', models.CharField(blank=True, help_text='Path to generated report file', max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('data_points', models.PositiveIntegerField(blank=True, help_text='Number of data points processed', null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When report was scheduled to generate', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this report file expires', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reports', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, help_text='Users who have access to this report', related_name='shared_reports', to=settings.AUTH_USER_MODEL)),
                ('specific_devices', models.ManyToManyField(blank=True, help_text='Specific devices included in report', to='devices.device')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='generated_reports', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['generated_by', 'status', '-created_at'], name='reports_generat_46353f_idx'), models.Index(fields=['template', '-created_at'], name='reports_templat_dbb21f_idx')],
            },
        ),
    ]
