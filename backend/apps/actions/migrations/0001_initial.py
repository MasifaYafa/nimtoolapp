# Generated by Django 4.2.7 on 2025-08-06 18:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('description', models.TextField(help_text='What this action does')),
                ('category', models.CharField(choices=[('reboot', 'Device Reboot'), ('config', 'Configuration'), ('interface', 'Interface Management'), ('security', 'Security Actions'), ('diagnostic', 'Diagnostics'), ('backup', 'Backup Operations')], max_length=12)),
                ('commands', models.JSONField(default=list, help_text='List of commands to execute')),
                ('timeout', models.PositiveIntegerField(default=30, help_text='Command timeout in seconds')),
                ('requires_enable_mode', models.BooleanField(default=False, help_text='Whether this action requires enable/privileged mode')),
                ('vendor_specific', models.CharField(blank=True, help_text='Specific vendor this template is for (empty for all)', max_length=50)),
                ('requires_confirmation', models.BooleanField(default=True, help_text='Require user confirmation before execution')),
                ('is_destructive', models.BooleanField(default=False, help_text='Mark as potentially destructive action')),
                ('confirmation_message', models.TextField(blank=True, help_text='Custom confirmation message to show user')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('compatible_device_types', models.ManyToManyField(help_text='Device types this template is compatible with', to='devices.devicetype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='action_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Action Template',
                'verbose_name_plural': 'Action Templates',
                'db_table': 'action_templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BulkAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Bulk operation description', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('device_count', models.PositiveIntegerField(default=0)),
                ('parameters', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('partial', 'Partially Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('parallel_execution', models.BooleanField(default=False, help_text='Execute on all devices simultaneously')),
                ('max_parallel', models.PositiveIntegerField(default=5, help_text='Maximum parallel executions')),
                ('continue_on_failure', models.BooleanField(default=True, help_text='Continue with remaining devices if one fails')),
                ('completed_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('devices', models.ManyToManyField(related_name='bulk_actions', to='devices.device')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bulk_actions', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bulk_executions', to='actions.actiontemplate')),
            ],
            options={
                'verbose_name': 'Bulk Action',
                'verbose_name_plural': 'Bulk Actions',
                'db_table': 'bulk_actions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Action description', max_length=200)),
                ('action_type', models.CharField(help_text='Type of action performed', max_length=50)),
                ('commands', models.JSONField(help_text='Commands that were/will be executed')),
                ('parameters', models.JSONField(default=dict, help_text='Parameters passed to the action')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('timeout', 'Timeout')], default='pending', max_length=10)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=6)),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to execute (null for immediate)', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('timeout_seconds', models.PositiveIntegerField(default=30)),
                ('output', models.TextField(blank=True, help_text='Command output')),
                ('error_message', models.TextField(blank=True, help_text='Error message if failed')),
                ('exit_code', models.IntegerField(blank=True, help_text='Command exit code', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='User who approved this action (if approval required)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_actions', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(help_text='Target device', on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='devices.device')),
                ('initiated_by', models.ForeignKey(help_text='User who initiated this action', on_delete=django.db.models.deletion.PROTECT, related_name='initiated_actions', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, help_text='Template used (if any)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executions', to='actions.actiontemplate')),
            ],
            options={
                'verbose_name': 'Device Action',
                'verbose_name_plural': 'Device Actions',
                'db_table': 'device_actions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['device', 'status', '-created_at'], name='device_acti_device__4f636e_idx'), models.Index(fields=['initiated_by', '-created_at'], name='device_acti_initiat_7476bd_idx')],
            },
        ),
    ]
