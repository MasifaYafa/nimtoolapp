# Generated by Django 4.2.7 on 2025-08-06 16:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Device name or hostname', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Device description')),
                ('ip_address', models.GenericIPAddressField(help_text='Primary IP address', validators=[django.core.validators.validate_ipv4_address])),
                ('mac_address', models.CharField(blank=True, help_text='MAC address (format: XX:XX:XX:XX:XX:XX)', max_length=17, null=True)),
                ('vendor', models.CharField(blank=True, help_text='Device vendor/brand', max_length=50)),
                ('model', models.CharField(blank=True, help_text='Device model', max_length=100)),
                ('firmware_version', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, help_text='Physical location', max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='GPS latitude for mapping', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='GPS longitude for mapping', max_digits=11, null=True)),
                ('address', models.TextField(blank=True, help_text='Physical address')),
                ('protocol', models.CharField(choices=[('snmp_v1', 'SNMP v1'), ('snmp_v2c', 'SNMP v2c'), ('snmp_v3', 'SNMP v3'), ('ssh', 'SSH'), ('telnet', 'Telnet'), ('http', 'HTTP'), ('https', 'HTTPS')], default='snmp_v2c', help_text='Protocol used for monitoring', max_length=10)),
                ('snmp_community', models.CharField(default='public', help_text='SNMP community string', max_length=100)),
                ('snmp_port', models.PositiveIntegerField(default=161, help_text='SNMP port')),
                ('monitoring_enabled', models.BooleanField(default=True)),
                ('ping_interval', models.PositiveIntegerField(default=30, help_text='Ping interval in seconds')),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('enable_password', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('warning', 'Warning'), ('unknown', 'Unknown'), ('maintenance', 'Maintenance')], default='unknown', max_length=12)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('uptime', models.DurationField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Last ping response time in milliseconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'db_table': 'devices',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='üñ•Ô∏è', help_text='Emoji icon for device type', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Device Type',
                'verbose_name_plural': 'Device Types',
                'db_table': 'device_types',
            },
        ),
        migrations.CreateModel(
            name='DeviceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_data', models.TextField(help_text='Configuration content')),
                ('config_type', models.CharField(default='running_config', help_text='Type of configuration (running, startup, etc.)', max_length=50)),
                ('backup_date', models.DateTimeField(auto_now_add=True)),
                ('size', models.PositiveIntegerField(help_text='Configuration size in bytes')),
                ('checksum', models.CharField(help_text='MD5 checksum for integrity', max_length=64)),
                ('backed_up_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Configuration',
                'verbose_name_plural': 'Device Configurations',
                'db_table': 'device_configurations',
                'ordering': ['-backup_date'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.ForeignKey(help_text='Type of network device', on_delete=django.db.models.deletion.PROTECT, to='devices.devicetype'),
        ),
        migrations.CreateModel(
            name='DeviceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('bandwidth_in', 'Bandwidth In'), ('bandwidth_out', 'Bandwidth Out'), ('temperature', 'Temperature'), ('disk_usage', 'Disk Usage'), ('ping_time', 'Ping Time')], max_length=15)),
                ('value', models.FloatField(help_text='Metric value')),
                ('unit', models.CharField(help_text='Unit of measurement (%, ms, MB/s, etc.)', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Metric',
                'verbose_name_plural': 'Device Metrics',
                'db_table': 'device_metrics',
                'indexes': [models.Index(fields=['device', 'metric_type', 'timestamp'], name='device_metr_device__d20c19_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('ip_address',)},
        ),
    ]
